#include<iostream>
#include<string>
#include<conio.h>
#include<map>
#include<list>
#include<ctime>

using std::cin;
using std::cout;
using std::endl;


#define tab "\t"
#define delimiter "\n--------------------------------------\n"

const std::map<double, std::string> OFFENSES =
{
	{12.1, "Первый/второй раз за год ехал без техосмотра или на неоформленном авто"},
	{12.2, "Ехал на машине с грязным номером"},
	{12.3, "Передал управление машиной человеку без прав"},
	{12.5, "Управлял машиной, на которой неисправен руль или тормоза"},
	{12.6, "Не пристегнулся ремнем сам или один из пассажиров"},
	{12.7, "Управлял авто без водительского удостоверения"},
	{12.8, "Сел за руль нетрезвым / Передал управление ТС нетрезвому водителю"},
	{12.9, "Превысил скорость на 20-40 км/ч / Превысил скорость на 40-60 км/ч"},
	{12.10, "Занимался учебной ездой на магистрали / Нарушил правила на ж/д путях"},
	{12.11, "Остановился на машистрали или ехал медленее 40 км/ч / Неправильная перевозка детей до 11 лет включительно"},
	{12.12, "Ехал на запрещающий сигнал светофора или регулировщика"},
	{12.13, "Выехал на пересечение дорог либо пересек дорогу и создал пробку / Не уступил машине с преимуществом на перекрестке"},
	{12.14, "Развернулся или ехал задним ходом там, где это запрещено / Перед поворотом или разворотом не занял крайний ряд в нужном напралении"},
	{12.15, "Выехал на встречную полосу / Ехал по обочине или пересек колонну авто или людей"},
	{12.16, "Нарушил требования знаков или разметки"},
	{12.17, "Ехал либо остановился на полосе маршрутного транспорта или путях трамваев"},
	{12.19, "Остановился или припарковался там, где это запрещено"},
	{12.20, "Не включил аварийку / Не предупредил сигналом об обгоне"},
	{12.21, "Нарушил порядок юуксировкиа: не включил аварийку или ехал быстрее 50 км/ч"},
	{12.23, "Перевозил людей вне кабины авто"},
	{12.26, "Сел за руль нетрезвым и отказался от медосвидетельствования"},
	{12.36, "Говорил по телефону без гарнитуры во время езды"},
};

class PoliceDatabase
{
	int id;
	std::string place;
	std::string time;
public:
	int get_PoliceDatabase_id()const
	{
		return id;
	}
	const std::string& get_place()const
	{
		return place;
	}
	const std::string& get_time()const
	{
		return time;
	}
	const std::string& get_offenses()const
	{
		return OFFENSES.at(id);
	}

};

